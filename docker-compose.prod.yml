version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${NGINX_DATA}/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_DATA}/cert.crt:/etc/nginx/cert.crt
      - ${NGINX_DATA}/cert.key:/etc/nginx/cert.key
    depends_on:
      - recommender-api
      
  recommender-api:
    image: lanle99/gift-recommender-api:latest
    depends_on:
      - mongo
      - harness
    container_name: recommender-api
    ports:
      - "8088:80"
    build:
      context: ./RecommenderApi
      dockerfile: RecommenderApi/Dockerfile
    environment:
      - GiftRecommenderDatabase__ConnectionString=mongodb://+:27017
      - ASPNETCORE_URLS=http://+:80
    networks:
      - prod
  
  harness:
    restart: always
    image: actionml/harness:develop
    container_name: harness
    environment:
      MONGO_URI: mongodb://mongo:27017
      HARNESS_URI: http://0.0.0.0:9090
      ELASTICSEARCH_URI: http://elasticsearch:9200
    depends_on:
      - mongo
      - elasticsearch
    volumes:
      - ${HARNESS_LOGS}:/harness/logs
      - ${HARNESS_DATA}:/data
    networks:
      - prod
      
  mongo:
    restart: always
    image: mongo:4.2
    container_name: mongo
    command: [--auth] #--logappend --logpath=/tmp/mongod.log
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PW}
    volumes:
      - ${MONGO_LOGS}:/logs
      - ${MONGO_DATA}:/data/db
      #- ${MONGO_INIT}:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - prod

  elasticsearch:
    restart: always
    image: elasticsearch:7.6.0
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: ${ES_JAVA_OPTS}
      discovery.seed_hosts: elasticsearch
      discovery.type: single-node
    volumes:
      - ${ES_DATA}:/usr/share/elasticsearch/data
    networks:
      - prod

  harness-cli:
    restart: always
    image: actionml/harness-cli:develop
    container_name: harness-cli
    environment:
        HARNESS_SERVER_ADDRESS: harness
    volumes:
    - ${HARNESS_DATA}:/data
    networks:
      - prod

  watchtower:
    restart: always
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3000
    networks:
      - prod
      
networks:
  prod:
    driver: bridge
